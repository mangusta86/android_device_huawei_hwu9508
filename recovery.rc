on early-init
    start ueventd

on init
    export PATH /sbin
    export PATH /sbin:/vendor/bin:/system/sbin:/system/bin:/system/xbin
    export LD_LIBRARY_PATH /vendor/lib:/system/lib
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard
    export BOOTCLASSPATH /system/framework/core.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/android.policy.jar:/system/framework/services.jar:/system/framework/apache-xml.jar:/system/framework/filterfw.jar

    symlink /system/etc /etc

# Right now vendor lives on the same filesystem as system,
# but someday that may change.
    symlink /system/vendor /vendor
    mkdir /sdcard
    mkdir /system
    mkdir /data
    mkdir /cust
    mkdir /modem
    mkdir /modem/modem_image
    mkdir /modem/nvm1
    mkdir /modem/nvm2
    chown system system /dev/cpuctl
    chown system system /dev/cpuctl/tasks
    mkdir /cache
    write /sys/module/block2mtd/parameters/block2mtd /dev/block/mmcblk0p3
    mount /tmp /tmp tmpfs
    # change nve device visit permission
    wait /dev/nve0
    chmod 0777 /dev/nve0
on fs
# mount mtd partitions
    # Mount /system rw first to give the filesystem a chance to save a checkpoint
    mount yaffs2 mtd@system /system
    mount yaffs2 mtd@system /system ro remount
    mount yaffs2 mtd@userdata /data nosuid nodev
    mount yaffs2 mtd@cache /cache nosuid nodev
    #mount ext4 /dev/block/mmcblk0p15 /system
    #mount ext4 /dev/block/mmcblk0p15 /system ro remount
    mount ext4 /dev/block/platform/hi_mci.1/by-name/system /system wait rw
    #mount ext4 /dev/block/mmcblk0p16 /cache
    mount ext4 /dev/block/platform/hi_mci.1/by-name/cache /cache wait rw
    wait /dev/block/mmcblk0p18
    exec /system/bin/e2fsck -p /dev/block/mmcblk0p18
    #mount ext4 /dev/block/mmcblk0p18 /data
    mount ext4 /dev/block/platform/hi_mci.1/by-name/userdata /data wait rw
    mount ext4 /dev/block/platform/hi_mci.1/by-name/cust /cust wait rw
    mount vfat /dev/block/platform/hi_mci.0/mmcblk1p1 /sdcard
    mount vfat /dev/block/mmcblk1 /sdcard


    mount ext4 /dev/block/mmcblk0p12 /modem/modem_image
    mount ext4 /dev/block/mmcblk0p13 /modem/nvm1
    mount ext4 /dev/block/mmcblk0p14 /modem/nvm2
    mount ext4 /dev/block/platform/hi_mci.1/by-name/reserved2 /reserved2 wait rw

    #chmod 0777 /modem/
    chmod 0740 /modem/modem_image
    chmod 0740 /modem/nvm1
    chmod 0740 /modem/nvm2
    chmod 0640 /modem/modem_image/HWT6260.fls
    chmod 0640 /modem/nvm1/flag
    chmod 0640 /modem/nvm1/firmware.md5
    chmod 0640 /modem/nvm1/calib.nvm
    chmod 0640 /modem/nvm1/dynamic.nvm
    chmod 0640 /modem/nvm1/static.nvm
    chmod 0640 /modem/nvm2/calib.nvm
    chmod 0640 /modem/nvm2/dynamic.nvm
    chmod 0640 /modem/nvm2/static.nvm
    chmod 0640 /modem/modem_image/HWT6260.fls.fls

    chown radio radio /modem/
    chown radio radio /modem/nvm1
    chown radio radio /modem/nvm2
    chown radio radio /modem/modem_image
    chown radio radio /modem/modem_image/HWT6260.fls
    chown radio radio /modem/nvm1/flag
    chown radio radio /modem/nvm1/firmware.md5
    chown radio radio /modem/nvm1/calib.nvm
    chown radio radio /modem/nvm1/dynamic.nvm
    chown radio radio /modem/nvm1/static.nvm
    chown radio radio /modem/nvm2/calib.nvm
    chown radio radio /modem/nvm2/dynamic.nvm
    chown radio radio /modem/nvm2/static.nvm
    chown radio radio /modem/modem_image/HWT6260.fls.fls

    /dev/ttyUSB1   0777   root  root
    /dev/ttyUSB0   0777   root  root
    /dev/ttyACM0   0777   root  root
    /dev/ttyACM1   0777   root  root
    /dev/ttyACM2   0777   root  root
    /dev/ttyACM3   0777   root  root

#bq2416x_charger
     chmod 0660 /sys/bus/i2c/devices/1-006b/enable_charger
     chown system system /sys/bus/i2c/devices/1-006b/enable_charger

on post-fs-data
    # We chown/chmod /data again so because mount is run as root + defaults
	chown system system /data
	chmod 0771 /data

	# Create dump dir and collect dumps.
	# Do this before we mount cache so eventually we can use cache for
	# storing dumps on platforms which do not have a dedicated dump partition.
	mkdir /data/dontpanic 0750 root log

	# Collect apanic data, free resources and re-arm trigger
	copy /proc/apanic_console /data/dontpanic/apanic_console
	chown root log /data/dontpanic/apanic_console
	chmod 0640 /data/dontpanic/apanic_console

	copy /proc/apanic_threads /data/dontpanic/apanic_threads
	chown root log /data/dontpanic/apanic_threads
	chmod 0640 /data/dontpanic/apanic_threads

	write /proc/apanic_console 1


on boot

    ifup lo
    hostname localhost
    domainname localdomain

    write /sys/devices/system/cpu/cpu1/online 0
    write /sys/devices/platform/ipps-v2.0/mcu "I 64"
    write /sys/devices/platform/ipps-v2.0/mcu "I 112"
    write /sys/devices/platform/ipps-v2.0/mcu "I 17"
    write /sys/devices/platform/ipps-v2.0/mcu "I 49"

    class_start default

	#add by w00187765
	mkdir /data/dumplog
	chmod 777 /data/dumplog

service ueventd /sbin/ueventd
    critical

service recovery /sbin/recovery

# DTS2011082903260  r00186667 2011/08/30 added begin
service chargeservice /sbin/chargeservice
# DTS2011082903260  r00186667 2011/08/30 added end
service adbd /sbin/adbd recovery
    disabled

# Always start adbd on userdebug and eng builds
on property:ro.debuggable=1
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 12D1
    write /sys/class/android_usb/android0/idProduct 3A13
    write /sys/class/android_usb/android0/functions ptp,adb,acm
    write /sys/class/android_usb/android0/enable 1
    write /sys/class/android_usb/android0/iManufacturer $ro.product.manufacturer
    write /sys/class/android_usb/android0/iProduct $ro.product.model
    write /sys/class/android_usb/android0/iSerial $ro.serialno
    start adbd

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1

service console /system/bin/sh
    console

service nvm-server /system/bin/nvm_server
socket nvm-ctl stream 777 root root
    user root
    group root
    oneshot

service imc_poweron /system/bin/imc_poweron
    user root
#    group radio cache inet misc
#    disabled
    oneshot

# ATcmd Server source upload begin
service atcmdserver  /system/bin/atcmdserver
    user root
    oneshot

